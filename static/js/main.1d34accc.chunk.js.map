{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","types/SortType.ts","components/TodoModal/TodoModal.tsx","App.tsx","utils/getFilteredTodos.ts","index.tsx"],"names":["TodoList","todos","modalTodo","setModalTodo","setShowModal","className","map","todo","classNames","id","completed","title","type","onClick","handleClick","TodoFilter","sortBy","inputValue","setSortBy","setInputValue","value","onChange","event","target","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","SortType","TodoModal","useState","isLoading","setIsLoading","user","setUser","useEffect","userId","finally","href","email","name","App","setTodos","All","showModal","visibleTodos","query","sortType","filteredTodos","trim","filter","toLocaleLowerCase","includes","Active","Completed","getFilteredTodos","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1d34accc.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n  modalTodo: Todo | null;\n  setShowModal: (value: boolean) => void;\n  setModalTodo: (value: Todo) => void;\n};\n\nexport const TodoList: React.FC<Props> = (\n  {\n    todos,\n    modalTodo,\n    setModalTodo,\n    setShowModal,\n  },\n) => {\n  const handleClick = (todo: Todo) => {\n    setModalTodo(todo);\n    setShowModal(true);\n  };\n\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map((todo) => (\n          <tr\n            data-cy=\"todo\"\n            className={classNames(\n              {\n                'has-background-info-light': modalTodo?.id === todo.id,\n              },\n            )}\n            key={todo.id}\n          >\n            <td className=\"is-vcentered\">{todo.id}</td>\n            <td className=\"is-vcentered\">\n              {todo.completed && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p className={classNames(\n                {\n                  'has-text-danger': !todo.completed,\n                  'has-text-success': todo.completed,\n                },\n              )}\n              >\n                {todo.title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => handleClick(todo)}\n              >\n                <span className=\"icon\">\n                  <i className={classNames('far',\n                    {\n                      'fa-eye-slash': modalTodo?.id === todo.id,\n                      'fa-eye': modalTodo?.id !== todo.id,\n                    })}\n                  />\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import React from 'react';\nimport { SortType } from '../../types/SortType';\n\ntype Props = {\n  sortBy: SortType;\n  inputValue: string;\n  setInputValue: (value: string) => void;\n  setSortBy: (value: SortType) => void;\n};\n\nexport const TodoFilter: React.FC<Props> = (\n  {\n    sortBy,\n    inputValue,\n    setSortBy,\n    setInputValue,\n  },\n) => (\n  <form className=\"field has-addons\">\n    <p className=\"control\">\n      <span className=\"select\">\n        <select\n          data-cy=\"statusSelect\"\n          value={sortBy}\n          onChange={(event: React.ChangeEvent<HTMLSelectElement>) => {\n            setSortBy(event.target.value as SortType);\n          }}\n        >\n          <option\n            value=\"all\"\n\n          >\n            All\n          </option>\n          <option\n            value=\"active\"\n\n          >\n            Active\n          </option>\n          <option\n            value=\"completed\"\n\n          >\n            Completed\n          </option>\n        </select>\n      </span>\n    </p>\n\n    <p className=\"control is-expanded has-icons-left has-icons-right\">\n      <input\n        data-cy=\"searchInput\"\n        type=\"text\"\n        className=\"input\"\n        placeholder=\"Search...\"\n        value={inputValue}\n        onChange={(event) => {\n          setInputValue(event.target.value);\n        }}\n      />\n      <span className=\"icon is-left\">\n        <i className=\"fas fa-magnifying-glass\" />\n      </span>\n\n      {inputValue && (\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n          <button\n            data-cy=\"clearSearchButton\"\n            type=\"button\"\n            className=\"delete\"\n            onClick={() => {\n              setInputValue('');\n            }}\n          />\n        </span>\n      )}\n    </p>\n  </form>\n);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","export enum SortType {\n  All = 'all',\n  Active = 'active',\n  Completed = 'completed',\n}\n","import React, { useState, useEffect } from 'react';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { getUser } from '../../api';\n\ntype Props = {\n  todo?: Todo | null;\n  setShowModal: (value: boolean) => void;\n  setModalTodo: (value: Todo | null) => void;\n};\n\nexport const TodoModal: React.FC<Props> = (\n  { todo, setShowModal, setModalTodo },\n) => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [user, setUser] = useState<User | null>(null);\n\n  useEffect(() => {\n    if (todo) {\n      setIsLoading(true);\n\n      getUser(todo.userId).then(setUser).finally(() => setIsLoading(false));\n    }\n  }, [todo]);\n\n  const handleReset = (): void => {\n    setShowModal(false);\n    setModalTodo(null);\n  };\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${todo?.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={handleReset}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo?.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {todo?.completed ? (\n                <strong className=\"has-text-success\">Done</strong>\n              ) : (\n                <strong className=\"has-text-danger\">Planned</strong>\n              )}\n\n              {' by '}\n\n              <a href={`mailto:${user?.email}`}>\n                {user?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\nimport { getTodos } from './api';\nimport { SortType } from './types/SortType';\nimport { getFilteredTodos } from './utils/getFilteredTodos';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [inputValue, setInputValue] = useState('');\n  const [sortBy, setSortBy] = useState(SortType.All);\n  const [showModal, setShowModal] = useState(false);\n  const [modalTodo, setModalTodo] = useState<Todo | null>(null);\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    getTodos()\n      .then(setTodos)\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  const visibleTodos = getFilteredTodos(todos, inputValue, sortBy);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                sortBy={sortBy}\n                inputValue={inputValue}\n                setInputValue={setInputValue}\n                setSortBy={setSortBy}\n              />\n            </div>\n\n            <div className=\"block\">\n              {isLoading\n                ? <Loader />\n                : (\n                  <TodoList\n                    todos={visibleTodos}\n                    modalTodo={modalTodo}\n                    setShowModal={setShowModal}\n                    setModalTodo={setModalTodo}\n                  />\n                )}\n\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {showModal && (\n        <TodoModal\n          todo={modalTodo}\n          setShowModal={setShowModal}\n          setModalTodo={setModalTodo}\n        />\n      )}\n    </>\n  );\n};\n","import { SortType } from '../types/SortType';\nimport { Todo } from '../types/Todo';\n\nexport const getFilteredTodos = (\n  todos: Todo[],\n  query: string,\n  sortType: SortType,\n) => {\n  let filteredTodos: Todo[] = [...todos];\n\n  if (query.trim()) {\n    filteredTodos = (todos.filter(\n      todo => todo.title.toLocaleLowerCase()\n        .includes(query.trim().toLocaleLowerCase()),\n    ));\n  }\n\n  switch (sortType) {\n    case SortType.Active:\n      filteredTodos = filteredTodos.filter(todo => !todo.completed);\n      break;\n    case SortType.Completed:\n      filteredTodos = filteredTodos.filter(todo => todo.completed);\n      break;\n    case SortType.All:\n    default:\n      break;\n  }\n\n  return filteredTodos;\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}